stages:
  - lint
  - tests
  - e2e

services:
  - mongo

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

.setup_dashboard: &setup_dashboard
  image: cypress/base:20.17.0
  cache:
    key:
      files:
        - apps/tergite-dashboard/package-lock.json
    paths:
      - apps/tergite-dashboard/.npm/
  before_script:
    - cd apps/tergite-dashboard
    - npm ci --cache .npm --prefer-offline

.setup_mss: &setup_mss
  image: python:$VERSION
  cache:
    key:
      files:
        - apps/tergite-mss/requirements.txt
    paths:
      - .cache/pip
  before_script:
    - pip install --upgrade pip
    - cd apps/tergite-mss
    - pip install ."[dev]"
    - sed -i 's/mongodb:\/\/localhost:27017/mongodb:\/\/mongo:27017/g' tests/fixtures/*
  parallel:
    matrix:
      - VERSION: ["3.12", "3.13"]

lint dashboard:
  needs: []
  stage: lint
  <<: *setup_dashboard
  script:
    - npm run lint

test dashboard:
  needs: []
  stage: tests
  <<: *setup_dashboard
  script:
    - npm run test

e2e test dashboard:
  needs: []
  stage: tests
  <<: *setup_dashboard
  script:
    - |
      if [ -n "$TEST_THRESHOLD" ]; then 
        echo "Setting TEST_THRESHOLD=$TEST_THRESHOLD";
        printf "\nTEST_THRESHOLD=$TEST_THRESHOLD" >> .env.test; 
      fi
    - npm run e2e

full e2e:
  needs: []
  image: docker:latest
  services:
    - name: docker:dind
  stage: e2e
  when: manual
  manual_confirmation: "Are you sure you want to run the end-to-end test?"
  variables:
    BACKEND_REPO: "https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_NAMESPACE}/tergite-backend.git"
    BACKEND_BRANCH: "main"
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375/
    CYPRESS_IMAGE: cypress/base:20.17.0
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG =~ /^v.*$/
  before_script:
    - docker info
    - |
      if [[ n "$DOCKER_USER" && -n "$DOCKER_TOKEN" ]]; then
        echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin; 
      else
        echo "Skipping docker login: DOCKER_USER or DOCKER_TOKEN not set."
      fi;
    - apk update && apk add --no-cache curl bash build-base
      openssl-dev zlib-dev libffi-dev make git jq
  script:
    - ./e2e_test.sh

lint mss:
  needs: []
  stage: lint
  <<: *setup_mss
  script:
    - black --check .

test mss:
  needs: []
  stage: tests
  <<: *setup_mss
  script:
    - pytest
